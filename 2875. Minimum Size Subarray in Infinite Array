
public class Solution {
    public int minSizeSubarray(int[] v, int k) {
        int n = v.length;
        long s = 0;
        for (int i : v)
            s += i;
        if (k % s == 0)
            return (int) ((k / s) * n);
        long x = (long) (k / s) * n;
        k = (int) (k - (s * (k / s)));
        int[] extendedArray = new int[n * 2];
        for (int i = 0; i < n; i++)
            extendedArray[i] = v[i];
        for (int i = 0; i < n; i++)
            extendedArray[i + n] = v[i];
        n = extendedArray.length;
        int i = 0, j = 0;
        s = 0;
        int ans = Integer.MAX_VALUE;
        while (i < n && j < n) {
            s += extendedArray[j];
            while (i < n && s > k) {
                s -= extendedArray[i];
                i++;
            }
            while (i < n && s == k) {
                ans = Math.min(ans, j - i + 1);
                s -= extendedArray[i];
                i++;
            }
            j++;
        }
        if (ans == Integer.MAX_VALUE)
            return -1;
        return ans + (int) x;
    }
}
